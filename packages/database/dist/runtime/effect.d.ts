import { Dinero } from "dinero.js";
import * as S from "@effect/schema/Schema";

//#region runtime/effect.d.ts
declare const IdWithPrefix: (prefix: string) => S.filter<S.Schema<string, string, never>>;
declare const JsonValue: typeof S.Unknown;
declare const IanaTimezone: S.filter<typeof S.String>;
declare const DineroType: S.transform<S.Struct<{
  amount: typeof S.Number;
  currency: S.optional<S.Struct<{
    code: typeof S.String;
    base: typeof S.Number;
    exponent: typeof S.Number;
  }>>;
  scale: S.optional<typeof S.Number>;
}>, S.Schema<Dinero<number>, Dinero<number>, never>>;
declare const Percentage: S.filter<S.Schema<number, number, never>>;
declare const NonNegativeInt: S.filter<S.Schema<number, number, never>>;
declare const UsersInsert: typeof S.Unknown;
declare const UsersSelect: typeof S.Unknown;
declare const OrganizationsInsert: typeof S.Unknown;
declare const OrganizationsSelect: typeof S.Unknown;
declare const CurrencyInsert: typeof S.Unknown;
declare const CurrencySelect: typeof S.Unknown;
declare const RegionInsert: typeof S.Unknown;
declare const RegionSelect: typeof S.Unknown;
declare const RegionCountryInsert: typeof S.Unknown;
declare const RegionCountrySelect: typeof S.Unknown;
declare const RegionPaymentProviderInsert: typeof S.Unknown;
declare const RegionPaymentProviderSelect: typeof S.Unknown;
declare const LocationTypeInsert: typeof S.Unknown;
declare const LocationTypeSelect: typeof S.Unknown;
declare const AddressInsert: typeof S.Unknown;
declare const AddressSelect: typeof S.Unknown;
declare const OrganizationSettingsInsert: typeof S.Unknown;
declare const OrganizationSettingsSelect: typeof S.Unknown;
declare const BrandProfileInsert: typeof S.Unknown;
declare const BrandProfileSelect: typeof S.Unknown;
declare const StockLocationInsert: typeof S.Unknown;
declare const StockLocationSelect: typeof S.Unknown;
declare const SalesChannelInsert: typeof S.Unknown;
declare const SalesChannelSelect: typeof S.Unknown;
declare const SalesChannelStockLocationInsert: typeof S.Unknown;
declare const SalesChannelStockLocationSelect: typeof S.Unknown;
declare const ProductTypeInsert: typeof S.Unknown;
declare const ProductTypeSelect: typeof S.Unknown;
declare const ProductCategoryInsert: typeof S.Unknown;
declare const ProductCategorySelect: typeof S.Unknown;
declare const ProductInsert: typeof S.Unknown;
declare const ProductSelect: typeof S.Unknown;
declare const ProductVariantInsert: typeof S.Unknown;
declare const ProductVariantSelect: typeof S.Unknown;
declare const ProductGroupInsert: typeof S.Unknown;
declare const ProductGroupSelect: typeof S.Unknown;
declare const ProductGroupProductInsert: typeof S.Unknown;
declare const ProductGroupProductSelect: typeof S.Unknown;
declare const ProductCategoryProductInsert: typeof S.Unknown;
declare const ProductCategoryProductSelect: typeof S.Unknown;
declare const ProductTagInsert: typeof S.Unknown;
declare const ProductTagSelect: typeof S.Unknown;
declare const PriceSetInsert: typeof S.Unknown;
declare const PriceSetSelect: typeof S.Unknown;
declare const PriceInsert: typeof S.Unknown;
declare const PriceSelect: typeof S.Unknown;
declare const ProductVariantPriceSetInsert: typeof S.Unknown;
declare const ProductVariantPriceSetSelect: typeof S.Unknown;
declare const ProductSalesChannelInsert: typeof S.Unknown;
declare const ProductSalesChannelSelect: typeof S.Unknown;
declare const TaxRateInsert: typeof S.Unknown;
declare const TaxRateSelect: typeof S.Unknown;
declare const ProductVariantTaxRateInsert: typeof S.Unknown;
declare const ProductVariantTaxRateSelect: typeof S.Unknown;
declare const FeeInsert: typeof S.Unknown;
declare const FeeSelect: typeof S.Unknown;
declare const PaymentProviderInsert: typeof S.Unknown;
declare const PaymentProviderSelect: typeof S.Unknown;
declare const PaymentCollectionInsert: typeof S.Unknown;
declare const PaymentCollectionSelect: typeof S.Unknown;
declare const PaymentIntentInsert: typeof S.Unknown;
declare const PaymentIntentSelect: typeof S.Unknown;
declare const PaymentAttemptInsert: typeof S.Unknown;
declare const PaymentAttemptSelect: typeof S.Unknown;
declare const PaymentMethodInsert: typeof S.Unknown;
declare const PaymentMethodSelect: typeof S.Unknown;
declare const RefundReasonInsert: typeof S.Unknown;
declare const RefundReasonSelect: typeof S.Unknown;
declare const RefundInsert: typeof S.Unknown;
declare const RefundSelect: typeof S.Unknown;
declare const InvoiceInsert: typeof S.Unknown;
declare const InvoiceSelect: typeof S.Unknown;
declare const SubscriptionInsert: typeof S.Unknown;
declare const SubscriptionSelect: typeof S.Unknown;
declare const SubscriptionSchedulePhaseInsert: typeof S.Unknown;
declare const SubscriptionSchedulePhaseSelect: typeof S.Unknown;
declare const InstallmentInsert: typeof S.Unknown;
declare const InstallmentSelect: typeof S.Unknown;
//#endregion
export { AddressInsert, AddressSelect, BrandProfileInsert, BrandProfileSelect, CurrencyInsert, CurrencySelect, DineroType, FeeInsert, FeeSelect, IanaTimezone, IdWithPrefix, InstallmentInsert, InstallmentSelect, InvoiceInsert, InvoiceSelect, JsonValue, LocationTypeInsert, LocationTypeSelect, NonNegativeInt, OrganizationSettingsInsert, OrganizationSettingsSelect, OrganizationsInsert, OrganizationsSelect, PaymentAttemptInsert, PaymentAttemptSelect, PaymentCollectionInsert, PaymentCollectionSelect, PaymentIntentInsert, PaymentIntentSelect, PaymentMethodInsert, PaymentMethodSelect, PaymentProviderInsert, PaymentProviderSelect, Percentage, PriceInsert, PriceSelect, PriceSetInsert, PriceSetSelect, ProductCategoryInsert, ProductCategoryProductInsert, ProductCategoryProductSelect, ProductCategorySelect, ProductGroupInsert, ProductGroupProductInsert, ProductGroupProductSelect, ProductGroupSelect, ProductInsert, ProductSalesChannelInsert, ProductSalesChannelSelect, ProductSelect, ProductTagInsert, ProductTagSelect, ProductTypeInsert, ProductTypeSelect, ProductVariantInsert, ProductVariantPriceSetInsert, ProductVariantPriceSetSelect, ProductVariantSelect, ProductVariantTaxRateInsert, ProductVariantTaxRateSelect, RefundInsert, RefundReasonInsert, RefundReasonSelect, RefundSelect, RegionCountryInsert, RegionCountrySelect, RegionInsert, RegionPaymentProviderInsert, RegionPaymentProviderSelect, RegionSelect, SalesChannelInsert, SalesChannelSelect, SalesChannelStockLocationInsert, SalesChannelStockLocationSelect, StockLocationInsert, StockLocationSelect, SubscriptionInsert, SubscriptionSchedulePhaseInsert, SubscriptionSchedulePhaseSelect, SubscriptionSelect, TaxRateInsert, TaxRateSelect, UsersInsert, UsersSelect };